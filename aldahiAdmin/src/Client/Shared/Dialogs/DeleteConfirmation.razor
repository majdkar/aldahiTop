@namespace FirstCall.Client.Shared.Dialogs
@inject Microsoft.Extensions.Localization.IStringLocalizer<DeleteConfirmation> localizer
@if (_rightToLeft)
{
    <MudDialog Style="direction:rtl">
        <TitleContent>
            <MudText Typo="Typo.h6">
                <MudIcon Icon="@Icons.Material.Filled.Delete" Class="mr-3 mb-n1" />
                @localizer["Delete Confirmation"]
            </MudText>
        </TitleContent>
        <DialogContent>
            <MudText>@ContentText</MudText>
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="Cancel">@localizer["Cancel"]</MudButton>
            <MudButton Color="Color.Error" Variant="Variant.Filled" OnClick="Submit">@localizer["Confirm"]</MudButton>
        </DialogActions>
    </MudDialog>
        }

    else
        { <MudDialog Style="direction:ltr">
        <TitleContent>
            <MudText Typo="Typo.h6">
                <MudIcon Icon="@Icons.Material.Filled.Delete" Class="mr-3 mb-n1" />
                @localizer["Delete Confirmation"]
            </MudText>
        </TitleContent>
        <DialogContent>
            <MudText>@ContentText</MudText>
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="Cancel">@localizer["Cancel"]</MudButton>
            <MudButton Color="Color.Error" Variant="Variant.Filled" OnClick="Submit">@localizer["Confirm"]</MudButton>
        </DialogActions>
    </MudDialog>
            }
       
    
@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public string ContentText { get; set; }
    private bool _rightToLeft = true;
    private string direction ;
     protected override async Task OnInitializedAsync()
    {


        _rightToLeft = await _clientPreferenceManager.IsRTL();
        if (_rightToLeft) direction = "rtl"; else direction = "ltr";
    }
    void Submit()
    {
        MudDialog.Close(DialogResult.Ok(true));
    }
    void Cancel() => MudDialog.Cancel();
}