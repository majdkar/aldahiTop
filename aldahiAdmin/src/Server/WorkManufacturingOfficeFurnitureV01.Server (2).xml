<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FirstCall.Server</name>
    </assembly>
    <members>
        <member name="T:FirstCall.Server.Controllers.BaseApiController`1">
            <summary>
            Abstract BaseApi Controller Class
            </summary>
        </member>
        <member name="M:FirstCall.Server.Controllers.Communication.ChatsController.GetChatHistoryAsync(System.String)">
            <summary>
            Get user wise chat history
            </summary>
            <param name="contactId"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.Communication.ChatsController.GetChatUsersAsync">
            <summary>
            get available users
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.Communication.ChatsController.SaveMessageAsync(FirstCall.Application.Models.Chat.ChatHistory{FirstCall.Application.Interfaces.Chat.IChatUser})">
            <summary>
            Save Chat Message
            </summary>
            <param name="message"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.Identity.AccountController.UpdateProfile(FirstCall.Application.Requests.Identity.UpdateProfileRequest)">
            <summary>
            Update Profile
            </summary>
            <param name="model"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.Identity.AccountController.ChangePassword(FirstCall.Application.Requests.Identity.ChangePasswordRequest)">
            <summary>
            Change Password
            </summary>
            <param name="model"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.Identity.AccountController.GetProfilePictureAsync(System.String)">
            <summary>
            Get Profile picture by Id
            </summary>
            <param name="userId"></param>
            <returns>Status 200 OK </returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.Identity.AccountController.UpdateProfilePictureAsync(FirstCall.Application.Requests.Identity.UpdateProfilePictureRequest)">
            <summary>
            Update Profile Picture
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.Identity.TokenController.Get(FirstCall.Application.Requests.Identity.TokenRequest)">
            <summary>
            Get Token (Email, Password)
            </summary>
            <param name="model"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.Identity.TokenController.Refresh(FirstCall.Application.Requests.Identity.RefreshTokenRequest)">
            <summary>
            Refresh Token
            </summary>
            <param name="model"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.Identity.UserController.GetAll">
            <summary>
            Get User Details
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.Identity.UserController.GetById(System.String)">
            <summary>
            Get User By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.Identity.UserController.GetRolesAsync(System.String)">
            <summary>
            Get User Roles By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.Identity.UserController.UpdateRolesAsync(FirstCall.Application.Requests.Identity.UpdateUserRolesRequest)">
            <summary>
            Update Roles for User
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.Identity.UserController.RegisterAsync(FirstCall.Application.Requests.Identity.RegisterRequest)">
            <summary>
            Register a User
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.Identity.UserController.ConfirmEmailAsync(System.String,System.String)">
            <summary>
            Confirm Email
            </summary>
            <param name="userId"></param>
            <param name="code"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.Identity.UserController.ToggleUserStatusAsync(FirstCall.Application.Requests.Identity.ToggleUserStatusRequest)">
            <summary>
            Toggle User Status (Activate and Deactivate)
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.Identity.UserController.ForgotPasswordAsync(FirstCall.Application.Requests.Identity.ForgotPasswordRequest)">
            <summary>
            Forgot Password
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.Identity.UserController.ResetPasswordAsync(FirstCall.Application.Requests.Identity.ResetPasswordRequest)">
            <summary>
            Reset Password
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.Identity.UserController.Export(System.String)">
            <summary>
            Export to Excel
            </summary>
            <param name="searchString"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.RoleClaimController.GetAll">
            <summary>
            Get All Role Claims(e.g. Product Create Permission)
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.RoleClaimController.GetAllByRoleId(System.String)">
            <summary>
            Get All Role Claims By Id
            </summary>
            <param name="roleId"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.RoleClaimController.Post(FirstCall.Application.Requests.Identity.RoleClaimRequest)">
            <summary>
            Add a Role Claim
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK </returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.RoleClaimController.Delete(System.Int32)">
            <summary>
            Delete a Role Claim
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.RoleController.GetAll">
            <summary>
            Get All Roles (basic, admin etc.)
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.RoleController.Post(FirstCall.Application.Requests.Identity.RoleRequest)">
            <summary>
            Add a Role
            </summary>
            <param name="request"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.RoleController.Delete(System.String)">
            <summary>
            Delete a Role
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.RoleController.GetPermissionsByRoleId(System.String)">
            <summary>
            Get Permissions By Role Id
            </summary>
            <param name="roleId"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.RoleController.Update(FirstCall.Application.Requests.Identity.PermissionRequest)">
            <summary>
            Edit a Role Claim
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.Utilities.AuditsController.GetUserTrailsAsync">
            <summary>
            Get Current User Audit Trails
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.Utilities.AuditsController.ExportExcel(System.String,System.Boolean,System.Boolean)">
            <summary>
            Search Audit Trails and Export to Excel
            </summary>
            <param name="searchString"></param>
            <param name="searchInOldValues"></param>
            <param name="searchInNewValues"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="T:FirstCall.Server.Controllers.Utilities.ExtendedAttributes.Base.ExtendedAttributesController`4">
            <summary>
            Abstract Extended Attributes Controller Class
            </summary>
        </member>
        <member name="M:FirstCall.Server.Controllers.Utilities.ExtendedAttributes.Base.ExtendedAttributesController`4.GetAll">
            <summary>
            Get All Entity Extended Attributes
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.Utilities.ExtendedAttributes.Base.ExtendedAttributesController`4.GetAllByEntityId(`1)">
            <summary>
            Get All Entity Extended Attributes by entity id
            </summary>
            <param name="entityId"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.Utilities.ExtendedAttributes.Base.ExtendedAttributesController`4.GetById(`0)">
            <summary>
            Get Entity Extended Attribute By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.Utilities.ExtendedAttributes.Base.ExtendedAttributesController`4.Post(FirstCall.Application.Features.ExtendedAttributes.Commands.AddEdit.AddEditExtendedAttributeCommand{`0,`1,`2,`3})">
            <summary>
            Create/Update a Entity Extended Attribute
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.Utilities.ExtendedAttributes.Base.ExtendedAttributesController`4.Delete(`0)">
            <summary>
            Delete a Entity Extended Attribute
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.Utilities.ExtendedAttributes.Base.ExtendedAttributesController`4.Export(System.String,`1,System.Boolean,System.Boolean,System.String)">
            <summary>
            Search Entity Extended Attribute and Export to Excel
            </summary>
            <param name="searchString"></param>
            <param name="entityId"></param>
            <param name="includeEntity"></param>
            <param name="onlyCurrentGroup"></param>
            <param name="currentGroup"></param>
            <returns></returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.Utilities.Misc.DocumentsController.GetAll(System.Int32,System.Int32,System.String)">
            <summary>
            Get All Documents
            </summary>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="searchString"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.Utilities.Misc.DocumentsController.GetById(System.Int32)">
            <summary>
            Get Document By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.Utilities.Misc.DocumentsController.Post(FirstCall.Application.Features.Documents.Commands.AddEdit.AddEditDocumentCommand)">
            <summary>
            Add/Edit Document
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.Utilities.Misc.DocumentsController.Delete(System.Int32)">
            <summary>
            Delete a Document
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.Utilities.Misc.DocumentTypesController.GetAll">
            <summary>
            Get All Document Types
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.Utilities.Misc.DocumentTypesController.GetById(System.Int32)">
            <summary>
            Get Document Type By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.Utilities.Misc.DocumentTypesController.Post(FirstCall.Application.Features.DocumentTypes.Commands.AddEdit.AddEditDocumentTypeCommand)">
            <summary>
            Create/Update a Document Type
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.Utilities.Misc.DocumentTypesController.Delete(System.Int32)">
            <summary>
            Delete a Document Type
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.Utilities.Misc.DocumentTypesController.Export(System.String)">
            <summary>
            Search Document Types and Export to Excel
            </summary>
            <param name="searchString"></param>
            <returns></returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.Utilities.PreferencesController.ChangeLanguageAsync(System.String)">
            <summary>
            Change Language Preference
            </summary>
            <param name="languageCode"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.Catalog.BrandsController.GetAll">
            <summary>
            Get All Brands
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.Catalog.BrandsController.GetById(System.Int32)">
            <summary>
            Get a Brand By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.Catalog.BrandsController.Post(FirstCall.Application.Features.Brands.Commands.AddEdit.AddEditBrandCommand)">
            <summary>
            Create/Update a Brand
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.Catalog.BrandsController.Delete(System.Int32)">
            <summary>
            Delete a Brand
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.Catalog.BrandsController.Export(System.String)">
            <summary>
            Search Brands and Export to Excel
            </summary>
            <param name="searchString"></param>
            <returns></returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.Catalog.ProductsController.GetAll(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get All Products
            </summary>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="searchString"></param>
            <param name="orderBy"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.Catalog.ProductsController.GetProductImageAsync(System.Int32)">
            <summary>
            Get a Product Image by Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.Catalog.ProductsController.Post(FirstCall.Application.Features.Products.Commands.AddEdit.AddEditProductCommand)">
            <summary>
            Add/Edit a Product
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.Catalog.ProductsController.Delete(System.Int32)">
            <summary>
            Delete a Product
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK response</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.Catalog.ProductsController.Export(System.String)">
            <summary>
            Search Products and Export to Excel
            </summary>
            <param name="searchString"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.DashboardController.GetDataAsync">
            <summary>
            Get Dashboard Data
            </summary>
            <returns>Status 200 OK </returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.GeneralSettings.NationsController.GetAll">
            <summary>
            Get All Nations
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.GeneralSettings.NationsController.GetById(System.Int32)">
            <summary>
            Get a Nation By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.GeneralSettings.NationsController.Post(FirstCall.Application.Features.Nations.Commands.AddEdit.AddEditNationCommand)">
            <summary>
            Create/Update a Nation
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.GeneralSettings.NationsController.Delete(System.Int32)">
            <summary>
            Delete a Nation
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.GeneralSettings.NationsController.Export(System.String)">
            <summary>
            Search Nations and Export to Excel
            </summary>
            <param name="searchString"></param>
            <returns></returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.GeneralSettings.PrincedomsController.GetAll">
            <summary>
            Get All Princedoms
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.GeneralSettings.PrincedomsController.GetById(System.Int32)">
            <summary>
            Get a Princedom By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.GeneralSettings.PrincedomsController.Post(FirstCall.Application.Features.Princedoms.Commands.AddEdit.AddEditPrincedomCommand)">
            <summary>
            Create/Update a Princedom
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.GeneralSettings.PrincedomsController.Delete(System.Int32)">
            <summary>
            Delete a Princedom
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.GeneralSettings.PrincedomsController.Export(System.String)">
            <summary>
            Search Princedoms and Export to Excel
            </summary>
            <param name="searchString"></param>
            <returns></returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.GeneralSettings.RequestStatussController.GetAll">
            <summary>
            Get All RequestStatuss
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.GeneralSettings.RequestStatussController.GetById(System.Int32)">
            <summary>
            Get a RequestStatus By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.GeneralSettings.RequestStatussController.Post(FirstCall.Application.Features.RequestStatuss.Commands.AddEdit.AddEditRequestStatusCommand)">
            <summary>
            Create/Update a RequestStatus
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.GeneralSettings.RequestStatussController.Delete(System.Int32)">
            <summary>
            Delete a RequestStatus
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.GeneralSettings.RequestStatussController.Export(System.String)">
            <summary>
            Search RequestStatuss and Export to Excel
            </summary>
            <param name="searchString"></param>
            <returns></returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.OwnersManagement.OwnersController.GetAll(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Get All Owners
            </summary>
            <param name="pageNumber"></param>
            <param name="pageSize"></param>
            <param name="searchString"></param>
            <param name="orderBy"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.OwnersManagement.OwnersController.GetOwnerImageAsync(System.Int32)">
            <summary>
            Get a Owner Image by Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.OwnersManagement.OwnersController.Post(FirstCall.Application.Features.Owners.Commands.AddEdit.AddEditOwnerCommand)">
            <summary>
            Add/Edit a Owner
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.OwnersManagement.OwnersController.Delete(System.Int32)">
            <summary>
            Delete a Owner
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK response</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.OwnersManagement.OwnersController.Export(System.String)">
            <summary>
            Search Owners and Export to Excel
            </summary>
            <param name="searchString"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.OwnersManagement.PassportsController.GetAll">
            <summary>
            Get All Passports
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.OwnersManagement.PassportsController.GetById(System.Int32)">
            <summary>
            Get a Passport By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.OwnersManagement.PassportsController.Post(FirstCall.Application.Features.Passports.Commands.AddEdit.AddEditPassportCommand)">
            <summary>
            Create/Update a Passport
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.OwnersManagement.PassportsController.Delete(System.Int32)">
            <summary>
            Delete a Passport
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.OwnersManagement.PassportsController.Export(System.String)">
            <summary>
            Search Passports and Export to Excel
            </summary>
            <param name="searchString"></param>
            <returns></returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.ProviderServicesManagement.ProviderServicesController.GetAll">
            <summary>
            Get All ProviderServices
            </summary>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.ProviderServicesManagement.ProviderServicesController.GetById(System.Int32)">
            <summary>
            Get a ProviderService By Id
            </summary>
            <param name="id"></param>
            <returns>Status 200 Ok</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.ProviderServicesManagement.ProviderServicesController.Post(FirstCall.Application.Features.ProviderServices.Commands.AddEdit.AddEditProviderServiceCommand)">
            <summary>
            Create/Update a ProviderService
            </summary>
            <param name="command"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.ProviderServicesManagement.ProviderServicesController.Delete(System.Int32)">
            <summary>
            Delete a ProviderService
            </summary>
            <param name="id"></param>
            <returns>Status 200 OK</returns>
        </member>
        <member name="M:FirstCall.Server.Controllers.v1.ProviderServicesManagement.ProviderServicesController.Export(System.String)">
            <summary>
            Search ProviderServices and Export to Excel
            </summary>
            <param name="searchString"></param>
            <returns></returns>
        </member>
    </members>
</doc>
